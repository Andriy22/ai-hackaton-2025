# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
name: Build and deploy Node.js app to Azure Web App - lumina-secure
on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  NODE_VERSION: '22.x'  # You were missing this env var

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './backend/backend-api/package-lock.json'
      
      - name: npm install, build, and test
        working-directory: ./backend/backend-api
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
      
      - name: Prepare production files
        working-directory: ./backend/backend-api
        run: |
          # Create a deployment directory
          mkdir -p ../deployment
          
          # Copy only necessary files for production
          cp package.json ../deployment/
          cp package-lock.json ../deployment/
          cp -r dist ../deployment/
          
          # Create a minimal production package.json if needed
          # Uncomment and adjust if you want to use this approach
          # node -e "const pkg=require('./package.json'); const newPkg={name:pkg.name,version:pkg.version,dependencies:pkg.dependencies,scripts:{start:pkg.scripts.start}}; fs.writeFileSync('../deployment/package.json', JSON.stringify(newPkg, null, 2));"
          
          # Optional: Include other necessary files
          # cp -r config ../deployment/ # If you have config files
          # cp .env.example ../deployment/ # If you have env file examples

      - name: Install production dependencies
        working-directory: ./backend/deployment
        run: npm ci --only=production
      
      - name: Zip artifact for deployment
        working-directory: ./backend
        run: zip -r ../release.zip ./deployment
      
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B5E1D096537C45C4B7708F340FFCC833 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_93986CAA995942E087B249EFF639B340 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_ABB0944B89D34EEBA6D0FBE3BB9291DB }}
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'lumina-secure'
          slot-name: 'Production'
          package: ./deployment
